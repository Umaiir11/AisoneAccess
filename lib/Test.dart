import 'dart:convert';
import 'dart:typed_data';

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:get/get.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:intl/intl.dart';
import 'package:responsive_framework/responsive_wrapper.dart';
import 'package:shimmer/shimmer.dart';
import '../ClassModules/cmGlobalVariables.dart';
import '../UserWidgets/Labels/Ulabels.dart';
import 'Models/EModel/ModAccLedger.dart';
import 'Screens/vi_LedgerPDF.dart';
import 'ServiceLayer/SlAisoneERP/SleRptPdf.dart';

class test1 extends StatefulWidget {
  const test1({Key? key}) : super(key: key);

  @override
  State<test1> createState() => _test1State();
}

class _test1State extends State<test1> {
  bool isFolded = true;
  late RxList<ModI_AccountLedger> l_ListAccountLedger =
  Get.find(tag: "Rx_ListAccountLegdger");

  List<ModI_AccountLedger> l_List_Elements = <ModI_AccountLedger>[];


  //UserWidgets
  ULabels lblCompanyList = new ULabels();
  ULabels lblCompanyName = new ULabels();

  //Controller
  TextEditingController _textController = TextEditingController();
  final G_currencyFormat = new NumberFormat("#,##0", "en_US");
  final DateFormat G_DateTimeFormat = DateFormat('dd-MMM-yy');




  @override
  void initState() {
    super.initState();
    l_List_Elements.addAll(l_ListAccountLedger);
    FncstartupSettings();
    FncReport();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
          height: double.infinity,
          width: double.infinity,
          decoration: const BoxDecoration(
            gradient: LinearGradient(
              begin: Alignment.topCenter,
              end: Alignment.bottomCenter,
              colors: [
                Color(0xFFFFFFFF),
                Color(0xFFD1FFFF),
                Color(0xFF88ECF8),
                Color(0xFF65DCDC),
              ],
              stops: [0.0, 0.5, 0.7, 0.9],
            ),
          ),
          child: SingleChildScrollView(
            child: ResponsiveWrapper(
              maxWidth: 1200,
              minWidth: 480,
              defaultScale: true,
              breakpoints: const [
                ResponsiveBreakpoint.resize(480, name: MOBILE),
                ResponsiveBreakpoint.autoScale(800, name: TABLET),
                ResponsiveBreakpoint.resize(1000, name: DESKTOP),
                ResponsiveBreakpoint.autoScale(2460, name: '4K'),
              ],
              child: Stack(
                children: <Widget>[
                  Container(
                    height: 500,
                  ),

                  Container(
                    margin: EdgeInsets.only(top: 115, left: 398),
                    child: TextButton(
                      onPressed: () {
                        Get.to(() => Controll());
                      },
                      child: SizedBox(
                        height: 38,
                        child: Image.asset("assets/pdf.png"),
                      ),
                    ),
                  ),

                  Container(
                    margin: EdgeInsets.only(top: 65, left: 162),
                    child: Shimmer.fromColors(
                        baseColor: Colors.black26,
                        highlightColor: Colors.cyanAccent,
                        child: lblCompanyList),
                  ),
                  //Cards and Decorated Containers

                  AnimatedContainer(duration: Duration(milliseconds: 370),
                    margin: EdgeInsets.only(top: 115, left:27),
                    width: isFolded ? 52 :320 ,
                    height: 52,
                    decoration: BoxDecoration(
                      borderRadius: BorderRadius.circular(32),
                      color: Colors.grey.shade200,

                    ),
                    child:  Row(children: [

                      Expanded(child: Container(
                          padding: EdgeInsets.only(left: 16),
                          child:  ! isFolded ? TextField(
                            controller: _textController,
                            onChanged: FncfilterSearchResults,
                            decoration: InputDecoration(
                              hintText: "Search",
                              hintStyle: TextStyle(color:Colors.black),
                              border: InputBorder.none,


                            ),)
                              :null

                      )
                      ),
                      AnimatedContainer(duration: Duration(milliseconds: 370),

                        child: Material(
                          type: MaterialType.transparency,
                          child: InkWell(
                              borderRadius: BorderRadius.only(
                                topLeft: Radius.circular(isFolded? 32:0),
                                topRight: Radius.circular(32),
                                bottomLeft:Radius.circular(isFolded? 32:0),
                                bottomRight: Radius.circular(32),


                              ),
                              child: Padding(
                                padding: EdgeInsets.all(16.0),
                                child: Icon(size: 20, isFolded? Icons.search : Icons.close,
                                  color: Colors.black87,

                                ),
                              ),

                              onTap:(){
                                setState(() {
                                  isFolded =! isFolded;
                                });
                              }
                          ),
                        ),



                      )

                    ],),
                  ),



                  Container(
                      margin: EdgeInsets.only(top: 165, left: 0),
                      child:  ListView.builder(
                        shrinkWrap: true,
                        physics: const NeverScrollableScrollPhysics(),
                        itemCount: l_List_Elements.length,
                        itemBuilder: ((context, index) {
                          return Column(
                            children: [
                              InkWell(
                                onTap: () async {


                                },

                                child: SizedBox(
                                  width: 395,
                                  height: 110,
                                  child: Card(
                                    elevation: 5.0,
                                    shape: RoundedRectangleBorder(
                                        borderRadius:
                                        BorderRadius.circular(10.0)),
                                    child: ResponsiveWrapper(
                                      maxWidth: 1200,
                                      minWidth: 480,
                                      defaultScale: true,
                                      breakpoints: const [
                                        ResponsiveBreakpoint.resize(480, name: MOBILE),
                                        ResponsiveBreakpoint.autoScale(800, name: TABLET),
                                        ResponsiveBreakpoint.resize(1000, name: DESKTOP),
                                        ResponsiveBreakpoint.autoScale(2460, name: '4K'),
                                      ],

                                      child: Stack(
                                        children: [
                                          Container(
                                              height:130,
                                              decoration: BoxDecoration(
                                                  gradient: LinearGradient(
                                                      colors: [
                                                        (l_ListAccountLedger[index]
                                                            .Pr_Credit ==
                                                            0)
                                                            ? Colors.white

                                                            : Colors.grey
                                                            .shade200,
                                                        (l_ListAccountLedger[index]
                                                            .Pr_Credit ==
                                                            0)
                                                            ? Colors.white

                                                            : Colors.grey
                                                            .shade200,
                                                      ],
                                                      begin: Alignment.topLeft,
                                                      end: Alignment.bottomRight),
                                                  borderRadius:
                                                  BorderRadius.circular(5.0),
                                                  boxShadow: const [
                                                    BoxShadow(
                                                      offset: Offset(0, 4),
                                                      color: Colors.teal,
                                                      blurRadius: 10,
                                                    )
                                                  ])),

                                          Container(
                                              decoration: BoxDecoration(
                                                  gradient: LinearGradient(
                                                      colors: [
                                                        (l_ListAccountLedger[index]
                                                            .Pr_Credit ==
                                                            0)
                                                            ? Colors.white

                                                            : Colors.grey
                                                            .shade200,
                                                        (l_ListAccountLedger[index]
                                                            .Pr_Credit ==
                                                            0)
                                                            ? Colors.white

                                                            : Colors.grey
                                                            .shade200,
                                                      ],
                                                      begin: Alignment.topLeft,
                                                      end: Alignment.bottomRight),
                                                  borderRadius:
                                                  BorderRadius.circular(5.0),
                                                  boxShadow: const [
                                                    BoxShadow(
                                                      offset: Offset(0, 4),
                                                      color: Colors.teal,
                                                      blurRadius: 10,
                                                    )
                                                  ])),
                                          Container(
                                            margin:
                                            EdgeInsets.only(top: 19, left: 35),
                                            child: Text(
                                              l_List_Elements[index].Pr_VNO,
                                              style:
                                              GoogleFonts.ubuntu(textStyle:
                                              TextStyle(
                                                  fontSize: 32,
                                                  color: Colors.black,
                                                  fontWeight: FontWeight.w600,
                                                  letterSpacing: .5)
                                              ),
                                            ),
                                          ),
                                          Container(
                                            margin:
                                            EdgeInsets.only(top: 25, left: 330),
                                            child: Text(
                                              G_DateTimeFormat.format(
                                                  l_List_Elements[index]
                                                      .Pr_VDate),
                                              style:
                                              GoogleFonts.ubuntu(textStyle:
                                              TextStyle(
                                                  fontSize: 22,
                                                  color: Colors.black,
                                                  fontWeight: FontWeight.w600,
                                                  letterSpacing: .5)
                                              ),
                                            ),
                                          ),


                                          Container(
                                            margin:
                                            EdgeInsets.only(top: 66, left: 35),
                                            child: Text(
                                              'Debit', style:
                                            GoogleFonts.ubuntu(textStyle:
                                            TextStyle(
                                                fontSize: 20,
                                                color: Colors.black,
                                                //fontWeight: FontWeight.w600,
                                                letterSpacing: .5)
                                            ),

                                            ),
                                          ),
                                          Container(
                                            margin:
                                            EdgeInsets.only(top: 90, left: 35),
                                            child: Text(

                                              G_currencyFormat.format(
                                                  l_List_Elements[index]
                                                      .Pr_Debit),

                                              style:
                                              GoogleFonts.ubuntu(textStyle:
                                              TextStyle(
                                                  fontSize: 19,
                                                  color: Colors.lightBlueAccent,
                                                  fontWeight: FontWeight.w600,
                                                  letterSpacing: .5)
                                              ),
                                            ),
                                          ),
                                          Container(
                                            margin:
                                            EdgeInsets.only(top: 66, left: 180),
                                            child: Text(
                                              'Credit', style:
                                            GoogleFonts.ubuntu(textStyle:
                                            TextStyle(
                                                fontSize: 20,
                                                color: Colors.black,
                                                //fontWeight: FontWeight.w600,
                                                letterSpacing: .5)
                                            ),

                                            ),
                                          ),
                                          Container(
                                            margin:
                                            EdgeInsets.only(top: 90, left: 180),
                                            child: Text(
                                              G_currencyFormat.format(
                                                  l_List_Elements[index]
                                                      .Pr_Credit),

                                              style: GoogleFonts.ubuntu(textStyle:
                                              TextStyle(
                                                  fontSize: 19,
                                                  color: Colors.greenAccent.shade400,
                                                  fontWeight: FontWeight.w600,
                                                  letterSpacing: .5)
                                              ),
                                            ),
                                          ),

                                          Container(
                                            margin:
                                            EdgeInsets.only(top: 66, left: 330),
                                            child: Text(
                                              'Balance', style:
                                            GoogleFonts.ubuntu(textStyle:
                                            TextStyle(
                                                fontSize: 20,
                                                color: Colors.black26,
                                                //fontWeight: FontWeight.w600,
                                                letterSpacing: .5)
                                            ),

                                            ),
                                          ),
                                          Container(
                                            margin:
                                            EdgeInsets.only(top: 90, left: 330),
                                            child: Text(
                                              G_currencyFormat.format(
                                                  l_List_Elements[index]
                                                      .Pr_Balance),

                                              style: GoogleFonts.ubuntu(textStyle:
                                              TextStyle(
                                                  fontSize: 19,
                                                  color: Colors.black,
                                                  fontWeight: FontWeight.w600,
                                                  letterSpacing: .5)
                                              ),
                                            ),
                                          ),

                                        ],
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ],
                          );
                        }),
                      )),

                ],
              ),
            ),
          )),
    );
  }

//============================DART=================================



  FncstartupSettings() {
    //Labels
    lblCompanyList.TxtText = "L E D G E R";
    lblCompanyList.TxtFontSize = 30;
    lblCompanyList.color = Colors.black38;

    lblCompanyName.TxtText = "Details";
    lblCompanyName.TxtFontSize = 21;
    lblCompanyName.color = Colors.black87;
  }

  FncReport() async {
    String? l_result;

    l_result = await SlERptPdf().Fnc_reportpdf();
    print(l_result);

    if (l_result == null) {
      Get.snackbar("Alert", "Invalid Login Information");
    } else {
      //Uint8List l_Report = Uint8List.fromList(l_result.codeUnits);
      //String lresult2 =
      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5kc3RyZWFtDQplbmRvYmoNCjcgMCBvYmoNCjw8L1R5cGUgL0NhdGFsb2cgL1BhZ2VzIDIgMCBSIC9NZXRhZGF0YSA4IDAgUiAvT3V0cHV0SW50ZW50cyBbPDwvVHlwZSAvT3V0cHV0SW50ZW50IC9TIC9HVFMjNUZQREZBMSAvT3V0cHV0Q29uZGl0aW9uSWRlbnRpZmllciA8RkVGRjAwNzMwMDUyMDA0NzAwNDIwMDIwMDA0OTAwNDUwMDQzMDAzNjAwMzEwMDM5MDAzNjAwMzYwMDJEMDAzMjAwMkUwMDMxPiAvRGVzdE91dHB1dFByb2ZpbGUgOSAwIFIgPj4NCl0gL05hbWVzIDw8Pj4NCiA+Pg0KDQplbmRvYmoNCjggMCBvYmoNCjw8L1R5cGUgL01ldGFkYXRhIC9TdWJ0eXBlIC9YTUwgL0xlbmd0aCAxMjU1ID4+DQpzdHJlYW0NCjw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+PHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyI+PHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj48cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczpwZGZhaWQ9Imh0dHA6Ly93d3cuYWlpbS5vcmcvcGRmYS9ucy9pZC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIiB4bWxuczpwZGY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGRmLzEuMy8iIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyI+PHBkZmFpZDpwYXJ0PjM8L3BkZmFpZDpwYXJ0PjxwZGZhaWQ6Y29uZm9ybWFuY2U+QjwvcGRmYWlkOmNvbmZvcm1hbmNlPjxkYzpjcmVhdG9yPjxyZGY6U2VxPjxyZGY6bGk+QWlzb25lIFN5c3RlbXM8L3JkZjpsaT48L3JkZjpTZXE+PC9kYzpjcmVhdG9yPjxwZGY6S2V5d29yZHM+RGV2RXhwcmVzcywgUmVwb3J0aW5nLCBQREY8L3BkZjpLZXl3b3Jkcz48ZGM6c3ViamVjdD48cmRmOkJhZz48cmRmOmxpPkRldkV4cHJlc3M8L3JkZjpsaT48cmRmOmxpPiBSZXBvcnRpbmc8L3JkZjpsaT48cmRmOmxpPiBQREY8L3JkZjpsaT48L3JkZjpCYWc+PC9kYzpzdWJqZWN0PjxkYzpkZXNjcmlwdGlvbj48cmRmOkFsdD48cmRmOmxpIHhtbDpsYW5nPSJ4LWRlZmF1bHQiPkRvY3VtZW50IFN1YmplY3Q8L3JkZjpsaT48L3JkZjpBbHQ+PC9kYzpkZXNjcmlwdGlvbj48ZGM6dGl0bGU+PHJkZjpBbHQ+PHJkZjpsaSB4bWw6bGFuZz0ieC1kZWZhdWx0Ij5Eb2N1bWVudCBUaXRsZTwvcmRmOmxpPjwvcmRmOkFsdD48L2RjOnRpdGxlPjxwZGY6UHJvZHVjZXI+QUlTT05FLVNFUlZFUiQ8L3BkZjpQcm9kdWNlcj48eG1wOkNyZWF0b3JUb29sPkFpc29uZSBFUlA8L3htcDpDcmVhdG9yVG9vbD48eG1wOkNyZWF0ZURhdGU+MjAyMi0xMC0yNFQxNDo0MjoyOSswNTowMDwveG1wOkNyZWF0ZURhdGU+PHhtcDpNb2RpZnlEYXRlPjIwMjItMTAtMjRUMTQ6NDI6MjkrMDU6MDA8L3htcDpNb2RpZnlEYXRlPjx4bXA6TWV0YWRhdGFEYXRlPjIwMjItMTAtMjRUMTQ6NDI6MjkrMDU6MDA8L3htcDpNZXRhZGF0YURhdGU+PC9yZGY6RGVzY3JpcHRpb24+PC9yZGY6UkRGPjwveDp4bXBtZXRhPjw/eHBhY2tldCBlbmQ9InciPz4NCmVuZHN0cmVhbQ0KZW5kb2JqDQoyIDAgb2JqDQo8PC9SZXNvdXJjZXMgMTAgMCBSIC9UeXBlIC9QYWdlcyAvQ291bnQgMSAvS2lkcyBbMSAwIFJdID4+DQoNCmVuZG9iag0KMTIgMCBvYmoNCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxMjUwID4+DQpzdHJlYW0NCliFrVhdqyQ1EP0r+QUxqaTyASK4V68gKKgDPohv6wqLCndf/Pue6iSd6ZkeJ51eLn2nZzpJnVNVqVNp9aaMMtpaQ6w4s6bIQSVvdUo5qk9/qF/VP8ouf5/+fDb2g/pJvSnyTiVjdUjK4mFkRawxsi2mKXFU/8pi+Pv5O/Xb7/h8j+t7XB+VNeqH+hAm39S7i/ri9ceLUTapywcs77X3Klmjs2erLu/Vl8aQN8aHcjHhSrgsrmiMcXj+imf4zeO7/7rcM3+lLh/Vt5eOqS1usjYuZvW3cslqzxT7b3+pX8BTmHp22tucVQwBYBQnnWwMyoYrvvdMrMriFXDx7HViWSBanZ1xjU0WdJWJqQwEuS+MBL38Zr9pDAogtqTJYe0KKNIzLKSyAGHrdIgyMZI2GYgKEAuDVgxRvX+p91x/l0/egoiaVGRQhENI87g3kg6AHLyOV554EtdbD/SQsNEunQkJs3ZxBYLbBcDxUBQgE6EAAHbnQ+Gdxs6ZCYVP2nYPkIThpbDmlwessUCziChoZ10c5B2stsWm66SJbu3uEKSgA00RdKhSdptrElIxxLVGSN6FfbJgivwilSitJnWi6PnuEyBgUXhFEzVKDWWwdVLS1roJb6VlADxAiiIQuoXQYz6muA6lMJFMRep4vzrPCXYu2J3sGTqD30UdYaURQFabbHjDoA9ZKHgw8jJkhIPLmojuOeTPhT9FnaLzK34USCK7wd+HLPgxxEYZMoI/LcnuH+HflowzPCwkKmZkeSUSg/YpbQNxNWZhEhk1VcYMZZMPqFwy+YZK3RL+s4UE/ofwetuoSLtAIW+oXI1ZqKD0abZ5jAoySkeSyTdUbI0GX0XlpSqMPbVLAsoQu5USCiLLo8026WNKnkGjyI/uk2R0tOxuKS0JJtHhVi3P0PBwnCXoZqUBUbYExNc0rsYsNIKDXsqYERrwOoT5fr9LsW+1d6nF56kkpDObuFLB/y2PPqDwCKIRQyzYkHYh3OUX1bzyrzW/JN/C2Z2PnAGyzsShV015KyJXYxYyDl+djBmigzCnaO63C6C7gSC0dbdSh3zdOvz/pkJCjKO5uc0sgQU1hV1WODR9I9AHpkfZIn6WdRHOAr1p67jxB+I8voAoBmpHmHN8080Kv0rrId/tafP4AugT0St3JTkEv6tlwd8U9Zj39jT5QADR/ibo0hSBrpGFQNPRI/7bV+LxFTxWcLErxrH8XxWxZlBVzSP+29fdAwQSjlumV9dDBLoWFgJNL4/4b19xx1eQ0m+mCawiWAmISh5x3o7IHoCOAuDnin4XvAK8ieIxv+3J6naFejoL2dTTWQw4rlocQPnp0dZhKcMymaXT6yf6raS2KlhtrMePIRvt/HFn4+atwbvnbw3WYlCBrC33EJC1575BshzjX2uP3Y70tryNW05Igz3TutObm1r3PBYK+MkHCnd+cjfvkdp2rFbW5nbICt5LIhrIj2dW2rZpVkrrOWSDjdfBZH4Yca7Rlu83PlxTvtpdu8QxywEGJTNvI7y8NzncJgaEZKJhsnhRNjV3axZ9HslOPt7oTeLOiE6bizckWRw50adNMW8Fpsw90WbNWK9NErfJJ5qkGfO9qpXJJ1qcqcivZas6f75BmTHf61mZfKK9CDPm10JXzU/1BzOWe6krk3fU/T/ku8mFDQplbmRzdHJlYW0NCmVuZG9iag0KMSAwIG9iag0KPDwvUGFyZW50IDIgMCBSIC9NZWRpYUJveCBbMCAwIDU5NSA4NDJdIC9Dcm9wQm94IFswIDAgNTk1IDg0Ml0gL1Jlc291cmNlcyAxMSAwIFIgL1R5cGUgL1BhZ2UgL0NvbnRlbnRzIDEyIDAgUiA+Pg0KDQplbmRvYmoNCjExIDAgb2JqDQo8PC9Gb250IDw8L0ZOVDAgMyAwIFIgL0ZOVDEgNCAwIFIgL0ZOVDIgNSAwIFIgPj4NCiAvUHJvY1NldCBbL1BERiAvVGV4dCAvSW1hZ2VCIC9JbWFnZUMgL0ltYWdlSV0gPj4NCg0KZW5kb2JqDQoxMCAwIG9iag0KPDwvUHJvY1NldCBbL1BERiAvVGV4dCAvSW1hZ2VCIC9JbWFnZUMgL0ltYWdlSV0gPj4NCg0KZW5kb2JqDQo2IDAgb2JqDQo8PC9UaXRsZSA8RkVGRjAwNDQwMDZGMDA2MzAwNzUwMDZEMDA2NTAwNkUwMDc0MDAyMDAwNTQwMDY5MDA3NDAwNkMwMDY1PiAvQXV0aG9yIDxGRUZGMDA0MTAwNjkwMDczMDA2RjAwNkUwMDY1MDAyMDAwNTMwMDc5MDA3MzAwNzQwMDY1MDA2RDAwNzM+IC9TdWJqZWN0IDxGRUZGMDA0NDAwNkYwMDYzMDA3NTAwNkQwMDY1MDA2RTAwNzQwMDIwMDA1MzAwNzUwMDYyMDA2QTAwNjUwMDYzMDA3ND4gL0tleXdvcmRzIDxGRUZGMDA0NDAwNjUwMDc2MDA0NTAwNzgwMDcwMDA3MjAwNjUwMDczMDA3MzAwMkMwMDIwMDA1MjAwNjUwMDcwMDA2RjAwNzIwMDc0MDA2OTAwNkUwMDY3MDAyQzAwMjAwMDUwMDA0NDAwNDY+IC9DcmVhdG9yIDxGRUZGMDA0MTAwNjkwMDczMDA2RjAwNkUwMDY1MDAyMDAwNDUwMDUyMDA1MD4gL1Byb2R1Y2VyIDxGRUZGMDA0MTAwNDkwMDUzMDA0RjAwNEUwMDQ1MDAyRDAwNTMwMDQ1MDA1MjAwNTYwMDQ1MDA1MjAwMjQ+IC9DcmVhdGlvbkRhdGUgPDQ0M0EzMjMwMzIzMjMxMzAzMjM0MzEzNDM0MzIzMjM5MkIzMDM1MjczMDMwMjc+IC9Nb2REYXRlIDw0NDNBMzIzMDMyMzIzMTMwMzIzNDMxMzQzNDMyMzIzOTJCMzAzNTI3MzAzMDI3PiA+Pg0KDQplbmRvYmoNCjEzIDAgb2JqDQo8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMzUzID4+DQpzdHJlYW0NCliFXVJNa8MwDL0H8h987E5JHMddoQRKP6CHbWUdY9fUVrrA4gQnPfTfT7GUMuaDzZP0np+Qku1xd3TNKJKT78wZRlE3znoYups3IC5wbVwcZVLYxowzDI9pqz6OEuSf78MI7dHVXRyt1xh7x/ww+rtYbGx3gScMvXkLvnFXsdjtP/dfpyl2vvX9D7TgRpHGUVkKC/Wk+FL1r1ULIqHSP+GPew9CUiAjN6azMPSVAV+5K6CBFE8p1gc8ZRyBs/8rZEHMS22+Kx8YUiEjTVWGjOnVAeqcYCEJHhg+B7gsGGaU3TNcUlYRTPMAZUpQHuijLX9EUpqlFHE1c9WG4JKVC1KWBHMyWbDJnGwotpGvKKv5X1JWszL1q7nfnJSxT8oSVzMXzQa4YkjFmosl2VBsQ1JWzVLUr+Z+c7JRTDZwMvMEpiGFbXqM3ty8x70ISxcmP828cfBYzL7DcuTx9QvTL67nDQplbmRzdHJlYW0NCmVuZG9iag0KMTYgMCBvYmoNCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL0NJREZvbnRUeXBlMiAvQmFzZUZvbnQgL0RFVkVYUCMyQkFyaWFsIzJDQm9sZCAvRm9udERlc2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IpCuVcKI3h3bF2DcyBEQaUPKDECIpHULiNjG9DIXM2j/AITLlJYMIoMZFLgTaQOZ8yu1XMVz5txT+f+6711Vr3EPwr86ueltwYur/EvnPhTsefX1wUrCENCmVuZHN0cmVhbQ0KZW5kb2JqDQoyNCAwIG9iag0KPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvQ0lERm9udFR5cGUyIC9CYXNlRm9udCAvREVWRVhQIzJCQXJpYWwgL0ZvbnREZXNjcmlwdG9yIDIyIDAgUiAvQ0lEU3lzdGVtSW5mbyAyMyAwIFIgL0RXIDEwMDAgL1cgWzMgWzI3Ny44MzJdIDE4IFsyNzcuODMyIDU1Ni4xNTIzIDU1Ni4xNTIzIDU1Ni4xNTIzXSAyNCBbNTU2LjE1MjNdIDI3IFs1NTYuMTUyMyA1NTYuMTUyM10gMzQgWzU1Ni4xNTIzXSAzNyBbNjY2Ljk5MjIgNzIyLjE2OCA3MjIuMTY4XSA2OCBbNTU2LjE1MjNdIDcwIFs1MDBdIDcyIFs1NTYuMTUyM10gNzQgWzU1Ni4xNTIzXSA3NiBbMjIyLjE2OF0gNzkgWzIyMi4xNjhdIDgxIFs1NTYuMTUyMyA1NTYuMTUyM10gODUgWzMzMy4wMDc4IDUwMCAyNzcuODMyXSA5MiBbNTAwXV0gL0NJRFRvR0lETWFwIC9JZGVudGl0eSA+Pg0KDQplbmRvYmoNCjUgMCBvYmoNCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9CYXNlRm9udCAvREVWRVhQIzJCQXJpYWwgL0VuY29kaW5nIC9JZGVudGl0eSMyREggL1RvVW5pY29kZSAyMSAwIFIgL0Rlc2NlbmRhbnRGb250cyBbMjQgMCBSXSA+Pg0KDQplbmRvYmoNCjIzIDAgb2JqDQo8PC9SZWdpc3RyeSA8NDE2NDZGNjI2NT4gL09yZGVyaW5nIDw0OTY0NjU2RTc0Njk3NDc5PiAvU3VwcGxlbWVudCAwID4+DQoNCmVuZG9iag0KMjUgMCBvYmoNCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxNiA+Pg0Kc3RyZWFtDQpYhfv/fxSMAlLAPwDoKzDrDQplbmRzdHJlYW0NCmVuZG9iag0KMjYgMCBvYmoNCjw8L0xlbmd0aDEgNT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OcCI70DqZQ1xJPVOnvO6bSnzJuUjUXFb9v6s+P2Xz+EdHxNHR2Of7D+wIB/HVMSSLpTz4Lfu6zcOHC+fxrYfZ8okp/1rhKf78xqImuo6i68hqE9QqFybII22W1Dm0xWhGZjUqwBbw4/pTNstGDPht2XbrUqDXqEt8qLGhOTC6Y8zhW8GUA9nHSoia4EnjUoubUNL5/WdCc1zdIsV3ltCkxpQAlNBeBldO0IPVF5uJhXdq63HVFjWmNuY1FGkJ3b0WgeytfSpvytsq0IHt+qCPwuKAGnY1q8fLuaeqWLApu5A/Z2TXZ85nor592tgjnnd7esWhjkIrsebDo1GA4IDLBSARLXxhiCz6IMPSzYApmEnxr/zr9WbCQZ8X7E1r6/wHQFlh3DQplbmRzdHJlYW0NCmVuZG9iag0KMTQgMCBvYmoNCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvREVWRVhQIzJCQXJpYWwjMkNCb2xkIC9Gb250V2VpZ2h0IDcwMCAvRmxhZ3MgMzIgL0l0YWxpY0FuZ2xlIDAgL0ZvbnRCQm94IFstNjI4IC0zNzYgMjAwMCAxMDU2XSAvQXNjZW50IDkwNSAvRGVzY2VudCAtMjEyIC9DYXBIZWlnaHQgNTAwIC9TdGVtViAwIC9DSURTZXQgMjkgMCBSIC9Gb250RmlsZTIgMzAgMCBSID4+DQoNCmVuZG9iag0KeHJlZg0KMCAzMQ0KMDAwMDAwMDAwMCAwMDAwMCBmDQowMDAwMDA1NzM2IDAwMDAwIG4NCjAwMDAwMDQzMjggMDAwMDAgbg0KMDAwMDAwNzU2MSAwMDAwMCBuDQowMDAwMDA4NTIwIDAwMDAwIG4NCjAwMDAwMDk1NDQgMDAwMDAgbg0KMDAwMDAwNjA2MiAwMDAwMCBuDQowMDAwMDAyNzE2IDAwMDAwIG4NCjAwMDAwMDI5ODYgMDAwMDAgbg0KMDAwMDAwMDAxNyAwMDAwMCBuDQowMDAwMDA1OTkwIDAwMDAwIG4NCjAwMDAwMDU4NjkgMDAwMDAgbg0KMDAwMDAwNDQwNyAwMDAwMCBuDQowMDAwMDA2Njc5IDAwMDAwIG4NCjAwMDAwNzMyMTIgMDAwMDAgbg0KMDAwMDA1MzgwNSAwMDAwMCBuDQowMDAwMDA3MTEwIDAwMDAwIG4NCjAwMDAwMDc3MTUgMDAwMDAgbg0KMDAwMDA1MzU2MCAwMDAwMCBuDQowMDAwMDMyMTM2IDAwMDAwIG4NCjAwMDAwMDgxMjEgMDAwMDAgbg0KMDAwMDAwODY4MiAwMDAwMCBuDQowMDAwMDMxOTIyIDAwMDAwIG4NCjAwMDAwMDk2OTEgMDAwMDAgbg0KMDAwMDAwOTEwNyAwMDAwMCBuDQowMDAwMDA5NzgzIDAwMDAwIG4NCjAwMDAwMDk4NzYgMDAwMDAgbg0KMDAwMDAzMjIyOCAwMDAwMCBuDQowMDAwMDMyMzIxIDAwMDAwIG4NCjAwMDAwNTM4OTcgMDAwMDAgbg0KMDAwMDA1Mzk5MCAwMDAwMCBuDQp0cmFpbGVyDQo8PC9TaXplIDMxIC9JbmZvIDYgMCBSIC9JRCBbPEYwREYxMUM3ODdDRkEyNEZCODc4QzI4NjYzQzY3NTg3PiA8RjBERjExQzc4N0NGQTI0RkI4NzhDMjg2NjNDNjc1ODc+XSAvUm9vdCA3IDAgUiA+Pg0KDQpzdGFydHhyZWYNCjczNDQ5DQolJUVPRg0K";

      Uint8List decoded = base64.decode(l_result);

      // var UTF8 = utf8.encode(l_result);
      cmGlobalVariables.Pb_Report = decoded;

      //print('UTF8        : ${utf8.encode(l_result)}');
      print(cmGlobalVariables.Pb_Report);
    }
  }


  void FncfilterSearchResults(String UserInput) {
    List<ModI_AccountLedger> dummySearchList = <ModI_AccountLedger>[];
    dummySearchList.addAll(l_ListAccountLedger);
    List<ModI_AccountLedger> l_SearchedListItems = [];

    List<ModI_AccountLedger> l_dummyListData = <ModI_AccountLedger>[];
    if (UserInput.isNotEmpty) {
      UserInput.split(' ').forEach((s) {


        l_SearchedListItems.addAll(l_ListAccountLedger.where((l_listelement) => l_listelement.Pr_VNO.toString().toLowerCase().contains(s)));
        l_SearchedListItems.addAll(l_ListAccountLedger.where((l_listelement) => l_listelement.Pr_VNO.toString().toUpperCase().contains(s)));
        l_SearchedListItems.addAll(l_ListAccountLedger.where((l_listelement) => l_listelement.Pr_Debit.toString().contains(s)));
        l_SearchedListItems.addAll(l_ListAccountLedger.where((l_listelement) => l_listelement.Pr_Credit.toString().contains(s)));
        l_SearchedListItems.addAll(l_ListAccountLedger.where((l_listelement) => l_listelement.Pr_Balance.toString().contains(s)));


        l_dummyListData = l_SearchedListItems.toSet().toList();
      });

      setState(() {
        l_List_Elements.clear();
        l_List_Elements.addAll(l_dummyListData);
      });
      return;
    } else {
      setState(() {
        l_List_Elements.clear();
        l_List_Elements.addAll(l_ListAccountLedger);
      });
    }
  }

}
